generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id Int @id @default(autoincrement())
  title String @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  userId String @map("user_id")
  sections Section[]

  @@index([userId, createdAt(sort: Desc)])
  @@map("projects")
}

enum SectionType {
  Text
  Image
  TextImage
}

model Section {
  id Int @id @default(autoincrement())
  type SectionType
  index Int
  projectId Int @map("project_id")
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  text Text?

  @@index([projectId, index(sort: Asc)])
  @@map("sections")
}

enum RowPosition {
  Left
  Center
  Right
}

model Text {
  id Int @id @default(autoincrement())
  content String @default("<h1>This is your heading</h1><p>You can write here as much as you want!</p>")
  rowPosition RowPosition @default(Left)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  sectionId Int @unique @map("section_id")
  section Section @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  externalLink ExternalLink?

  @@index([sectionId])
  @@map("texts")
}

model ExternalLink {
  id Int @id @default(autoincrement())
  label String @default("Details")
  url String @default("")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  textId Int @unique @map("text_id")
  text Text @relation(fields: [textId], references: [id], onDelete: Cascade)

  @@map("external_links")
}